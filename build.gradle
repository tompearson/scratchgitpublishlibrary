// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.5.10"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

}
plugins {
    id "maven-publish"
}


allprojects {
// Good overall article https://proandroiddev.com/android-maven-publish-for-your-libraries-b76ad47677df
    // This is where the published files will be written from publications{} below.
    // .m2\repository\com\library\tappyplay\pocketknife
    group = "com.library.tappyplay.pocketknife"
    // .m2\repository\com\library\tappyplay\pocketknife\PocketKnifeModule1-Library_WithPermissions\1.0.1
    version = "1.0.0"
    repositories {
        google()
        mavenCentral()
        jcenter() // Warning: this repository is going to shut down soon
    }
    task hello {
        // debug task
        doLast { task ->
            println "I'm $task.project.name (this is the task.project.name)"
        }
    }
}
println "Message: The buildDir $buildDir "
def home_variable = "~/.m2/repository/"
println "Message: home_variable = $home_variable"
println "Message rootProject.name-project.name = $rootProject.name-$project.name"
println "Message: version = $version"
println "Message: group = $group"
/*
Same problem I'm having
https://stackoverflow.com/questions/67253670/could-not-get-unknown-property-release-for-softwarecomponentinternal-maven-p
 */
// Create the local repository in C:\Users\Tom\.m2\repository\com\library\tappyplay\pocketknife
// Bash
//$ ./gradlew publishToMavenLocal --info

// https://dev.to/mohitrajput987/publish-android-library-using-github-packages-4lnf

subprojects {// gradlew publishToMavenLocal
    apply plugin: "maven-publish"
    afterEvaluate {
        if (!plugins.hasPlugin("android")) {
            publishing {
                publications {
                    maven(MavenPublication) {
                        artifactId = "$rootProject.name-$project.name"
                        if (plugins.hasPlugin("java")) {
                            println "Message: from components.java"
                            from components.java
                        } else if (plugins.hasPlugin("android-library")) {
                            println "Message: from components.android"
//                            from components.android

                        }

                    }
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}